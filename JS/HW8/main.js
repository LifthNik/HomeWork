// - Створити функцію конструктор для об'єктів User з полями id, name, surname , email, phone
// створити пустий масив, наповнити його 10 об'єктами new User

function User(id, name, surname, email, phone) {

    this.id = id;
    this.name = name;
    this.surname = surname;
    this.email = email
    this.phone = phone;
}


let user1 = new User(1, 'vasya', 'sur1', '11111@mail.com', 1111111);
let user2 = new User(2, 'petya', 'sur2', '22222@mail.com', 2222222);
let user3 = new User(3, 'vitya', 'sur3', '33333@mail.com', 3333333);
let user4 = new User(4, 'oleg', 'sur4', '44444@mail.com', 4444444);
let user5 = new User(5, 'dima', 'sur5', '55555@mail.com', 5555555);
let user6 = new User(6, 'jenya', 'sur6', '66666@mail.com', 6666666);
let user7 = new User(7, 'sasha', 'sur7', '77777@mail.com', 7777777);
let user8 = new User(8, 'vova', 'sur8', '88888@mail.com', 8888888);
let user9 = new User(9, 'andrey', 'sur9', '99999@mail.com', 9999999);
let user10 = new User(10, 'nikolay', 'sur10', '10101@mail.com', 1010101);

let arrayOfUsers = [];

arrayOfUsers.push(user1,user2,user3,user4,user5,user6,user7,user8,user9,user10);

console.log(arrayOfUsers);



// - Взяти масив з  User[] з попереднього завдання, та відфільтрувати , залишивши тільки об'єкти з парними id (filter)

let filteredUsers = []

for (let u of arrayOfUsers) {
    if (u.id % 2 === 0) {
        filteredUsers.push(u);
    }
}

console.log(filteredUsers);

//OR

console.log(arrayOfUsers.filter(u => u.id % 2 === 0));


// - Взяти масив з  User[] з попереднього завдання, та відсортувати його по id. по зростанню (sort)


let sort = arrayOfUsers.sort((user1, user2) => user2.id - user1.id);

//у массиві об'єкти вже стоять у порядку зростання. Зробив у порядку спадання.
//у порядку зростання було б user1.id - user2.id

console.log(sort);


// - створити класс для об'єктів Client з полями id, name, surname , email, phone, order (поле є масивом зі списком товарів)
// створити пустий масив, наповнити його 10 об'єктами Client






// - Взяти масив (Client [] з попереднього завдання).Відсортувати його по кількості товарів в полі order по зростанню. (sort)




// - Створити функцію конструктор яка дозволяє створювати об'єкти car, з властивостями модель, виробник, рік випуску,
// максимальна швидкість, об'єм двигуна. додати в об'єкт функції:
// -- drive () - яка виводить в консоль `їдемо зі швидкістю ${максимальна швидкість} на годину`
// -- info () - яка виводить всю інформацію про автомобіль в форматі `назва поля - значення поля`
// -- increaseMaxSpeed (newSpeed) - яка підвищує значення максимальної швидкості на значення newSpeed
// -- changeYear (newValue) - змінює рік випуску на значення newValue
// -- addDriver (driver) - приймає об'єкт який "водій" з довільним набором полів, і додає його в поточний об'єкт car





// - (Те саме, тільки через клас)
// Створити клас який дозволяє створювати об'єкти car, з властивостями модель, виробник, рік випуску, максимальна швидкість,
// об'єм двигуна. додати в об'єкт функції:
// -- drive () - яка виводить в консоль `їдемо зі швидкістю ${максимальна швидкість} на годину`
// -- info () - яка виводить всю інформацію про автомобіль в форматі `назва поля - значення поля`
// -- increaseMaxSpeed (newSpeed) - яка підвищує значення максимальної швидкості на значення newSpeed
// -- changeYear (newValue) - змінює рік випуску на значення newValue
// -- addDriver (driver) - приймає об'єкт який "водій" з довільним набором полів, і додає його в поточний об'єкт car
//
//
//
// -створити класс/функцію конструктор попелюшка з полями ім'я, вік, розмір ноги. Створити масив з 10 попелюшок.
// Сторити об'єкт класу "принц" за допомоги класу який має поля ім'я, вік, туфелька яку він знайшов.
//     За допомоги циклу знайти яка попелюшка повинна бути з принцом.
//     Додатково, знайти необхідну попелюшку за допомоги функції масиву find та відповідного колбеку